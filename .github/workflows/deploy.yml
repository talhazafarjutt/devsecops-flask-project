name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "�� Starting automated deployment..."
            
            # Navigate to project directory
            cd ~/projects/devsecops-flask-project || (mkdir -p ~/projects && cd ~/projects && git clone https://github.com/talhazafarjutt/devsecops-flask-project.git && cd devsecops-flask-project)
            
            # Pull latest changes
            echo "📥 Pulling latest changes from main branch..."
            git pull origin main
            
            # Update Nginx configuration
            echo "🌐 Updating Nginx configuration..."
            sudo cp nginx/nginx.conf /etc/nginx/sites-available/devsecops
            
            # Test Nginx configuration
            echo "🧪 Testing Nginx configuration..."
            sudo nginx -t
            if [ $? -ne 0 ]; then
              echo "❌ Nginx configuration test failed!"
              exit 1
            fi
            
            # Stop existing containers
            echo "🛑 Stopping existing containers..."
            docker-compose down || true
            
            # Start containers with new configuration
            echo "🚀 Starting containers with new configuration..."
            docker-compose up -d --build
            
            # Wait for services to be ready
            echo "⏳ Waiting for services to start..."
            sleep 30
            
            # Reload Nginx with new configuration
            echo "🔄 Reloading Nginx..."
            sudo systemctl reload nginx
            
            # Health checks
            echo "🏥 Performing health checks..."
            sleep 10
            
            # Test Flask app
            if curl -f http://localhost:5001 > /dev/null 2>&1; then
              echo "✅ Flask app is running"
            else
              echo "❌ Flask app is not responding"
              exit 1
            fi
            
            # Test Grafana
            if curl -f http://localhost:3000/grafana/ > /dev/null 2>&1; then
              echo "✅ Grafana is running"
            else
              echo "❌ Grafana is not responding"
              exit 1
            fi
            
            # Test Prometheus
            if curl -f http://localhost:9090 > /dev/null 2>&1; then
              echo "✅ Prometheus is running"
            else
              echo "❌ Prometheus is not responding"
              exit 1
            fi
            
            # Test HTTPS access
            echo "🔒 Testing HTTPS access..."
            if curl -f https://dev.devsecopsassignment.work.gd > /dev/null 2>&1; then
              echo "✅ HTTPS Flask app is accessible"
            else
              echo "❌ HTTPS Flask app is not accessible"
            fi
            
            if curl -f https://dev.devsecopsassignment.work.gd/grafana/ > /dev/null 2>&1; then
              echo "✅ HTTPS Grafana is accessible"
            else
              echo "❌ HTTPS Grafana is not accessible"
            fi
            
            echo "🎉 Deployment completed successfully!"
            echo "🌐 Flask App: https://dev.devsecopsassignment.work.gd"
            echo "📊 Grafana: https://dev.devsecopsassignment.work.gd/grafana/"
            echo "📈 Prometheus: https://dev.devsecopsassignment.work.gd/prometheus/"
